name: CI with Feature Flag Control

on:
  push:
    branches:
      - main

jobs:
  selenium-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: npm install chromedriver selenium-webdriver

      - name: Run Selenium test
        run: npm run test:selenium
        
  split_evaluation:
    runs-on: ubuntu-latest
    outputs:
      treatments: ${{ steps.eval.outputs.result }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Evaluate feature flags
        id: eval
        uses: splitio/split-evaluator-action@v1.0.0
        with:
          api-key: ${{ secrets.SPLIT_API_KEY }}
          key: ${{ secrets.SPLIT_EVAL_KEY }}
          feature-flags: |
            B2C_customer_journey
            dynamic_boxes

  test:
    needs: split_evaluation
    runs-on: ubuntu-latest
    steps:
      - name: Run Selenium tests if enabled
        if: ${{ fromJson(needs.split_evaluation.outputs.treatments).B2C_customer_journey == 'on' }}
        run: npm run test:selenium

  deploy:
    needs: [split_evaluation, test]
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.split_evaluation.outputs.treatments).dynamic_boxes == 'on' }}
    steps:
      - name: Deploy to staging
        run: echo "Deploying to staging..."

  testing:
        needs: split_evaluation
        runs-on: ubuntu-latest
        steps:
            - name: Unit tests
              run: echo 'running unit tests...'

            - name: Integration tests
              run: echo 'running integration tests...'

            - name: Integration tests v2
              if: ${{ fromJson(needs.split_evaluation.outputs.treatments).B2C_customer_journey == 'on' }}
              run: echo 'running B2C customer journey...'

  deploy_canary:
        needs: [split_evaluation, testing]
        if: ${{ fromJson(needs.split_evaluation.outputs.treatments).dynamic_boxes == 'on' }}
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to CANARY env
              run: echo 'deploying dynamic_boxes to CANARY...'

  deploy_prod:
        needs: [split_evaluation, testing]
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to PROD env
              run: echo 'deploying dynamic_boxes to PROD...'

  run_pipeline:
    needs: split_evaluation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug evaluated flags
        run: echo '${{ needs.evaluate_flags.outputs.flags }}'

      - name: Run Canary Deploy Step
        if: ${{ needs.split_evaluation.outputs.flags != '' && fromJson(needs.split_evaluation.outputs.flags).B2C_customer_journey == 'on' }}
        run: echo "Running canary deploy..."

      - name: Skip Canary Deploy
        if: ${{ needs.split_evaluation.outputs.flags == '' || fromJson(needs.split_evaluation.outputs.flags).B2C_customer_journey != 'on' }}
        run: echo "Skipping canary deploy – flag not enabled."

      - name: Publish Artifacts to JFrog
        if: ${{ needs.split_evaluation.outputs.flags != '' && fromJson(needs.split_evaluation.outputs.flags).dynamic_boxes == 'on' }}
        run: |
          echo "Publishing artifacts..."
          # Insert actual JFrog CLI commands here
          # jfrog rt upload ./build my-repo/

      - name: Skip Artifact Publish
        if: ${{ needs.split_evaluation.outputs.flags == '' || fromJson(needs.split_evaluation.outputs.flags).dynamic_boxes != 'on' }}
        run: echo "Skipping artifact publish – flag not enabled."
